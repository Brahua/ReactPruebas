{"version":3,"sources":["logo.svg","components/Reloj.js","components/Form.js","components/Index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Reloj","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","date","Date","_this2","timerID","setInterval","update","clearInterval","setState","react_default","a","createElement","Fragment","toLocaleTimeString","Component","ModalCredenciales","className","id","tabIndex","role","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","email","contrasenia","cargo","mensaje","Form","cargos","data","handleChange","bind","assertThisInitialized","handleSubmit","e","_e$target","target","name","value","defineProperty","alert","preventDefault","console","log","itemCargo","map","key","nombre","onSubmit","htmlFor","aria-describedby","placeholder","onChange","rows","data-toggle","data-target","library","user","firstName","lastName","UserCards","users","style","marginTop","username","address","street","suite","city","Index","alertClick","form","handleAlertClick","handleGetPersons","fetch","then","response","json","onClick","formatName","src","logo","alt","components_Reloj","components_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_components_Index","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f32236c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\n\r\nclass Reloj extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            date: new Date()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(() => {\r\n           this.update() \r\n        }, 1000);    \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);   \r\n    }\r\n    \r\n    update(){\r\n        this.setState({\r\n            date: new Date()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <h4>Hora Actual: {this.state.date.toLocaleTimeString()}</h4>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Reloj;","import React, { Component } from \"react\";\r\nimport data from \"./data.json\";\r\n\r\nfunction ModalCredenciales(props) {\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"exampleModal\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title text-dark\">Credenciales enviadas</h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body text-dark\">\r\n            <p>Email: {props.email}</p>\r\n            <p>Contraseña: {props.contrasenia}</p>\r\n            <p>Cargo: {props.cargo}</p>\r\n            <p>Mensaje: {props.mensaje}</p>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      contrasenia: \"\",\r\n      mensaje: \"\",\r\n      cargo: \"\",\r\n      cargos: data.cargos\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n  handleSubmit(e) {\r\n    alert(\r\n      \"Correo: \" + this.state.email + \"\\nContraseña: \" + this.state.contrasenia\r\n    );\r\n    e.preventDefault();\r\n  }\r\n  componentDidMount() {\r\n    console.log(this.state.cargos);\r\n  }\r\n  \r\n  \r\n  render() {\r\n    const itemCargo = this.state.cargos.map((cargo)=>{\r\n        return(\r\n            <option key={cargo.id} value={cargo.nombre}>{cargo.nombre}</option>\r\n        )\r\n    })\r\n    return (\r\n      <>\r\n        <form className=\"col-md-6\" onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Ingrese su correo\"\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n            />\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputPassword1\">Contraseña</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"exampleInputPassword1\"\r\n              placeholder=\"Contraseña\"\r\n              name=\"contrasenia\"\r\n              value={this.state.contrasenia}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"inputState\">Cargo</label>\r\n            <select id=\"inputState\" className=\"form-control\" name=\"cargo\" onChange={this.handleChange}>\r\n              <option value=\"\">Seleccionar</option>\r\n              {itemCargo}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleFormControlTextarea1\">Mensaje</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"exampleFormControlTextarea1\"\r\n              rows=\"3\"\r\n              name=\"mensaje\"\r\n              value={this.state.mensaje}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          {/* <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Enviar\r\n                  </button> */}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#exampleModal\"\r\n          >\r\n            Enviar\r\n          </button>\r\n        </form>\r\n        <ModalCredenciales\r\n          email={this.state.email}\r\n          contrasenia={this.state.contrasenia}\r\n          mensaje={this.state.mensaje}\r\n          cargo={this.state.cargo}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import React, { Component } from \"react\";\r\nimport Reloj from \"./Reloj\";\r\nimport Form from \"./Form\";\r\nimport logo from \"./../logo.svg\";\r\nimport \"./Index.css\";\r\n\r\nconst library = <h2 className=\"react\">React JS</h2>;\r\nconst user = {\r\n  firstName: \"Josue\",\r\n  lastName: \"Bravo\"\r\n};\r\nfunction formatName(user) {\r\n  return user.firstName + \" \" + user.lastName;\r\n}\r\nfunction getGreeting(user) {\r\n  if (user) {\r\n    return <h4>Hola {formatName(user)}</h4>;\r\n  } else {\r\n    return <h4>Hola extraño</h4>;\r\n  }\r\n}\r\nfunction UserCards(props){\r\n    const users = props.users.map(user => (\r\n      <div className=\"col-sm-12 col-md-6 col-lg-4\" key={user.id}>\r\n        <div\r\n          className=\"card bg-light mb-3 border-info\"\r\n          style={{ marginTop: 10 }}\r\n        >\r\n          <div className=\"card-header text-info\">{user.name}</div>\r\n          <div className=\"card-body text-dark\">\r\n            <h5 className=\"card-title\">{user.username}</h5>\r\n            <p className=\"card-text\">\r\n              {user.address.street} <br />\r\n              {user.address.suite} <br />\r\n              {user.address.city}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n    return users;\r\n}\r\n\r\n\r\n\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      alertClick: false,\r\n      users: [],\r\n      form: true,\r\n    };\r\n    this.handleAlertClick = this.handleAlertClick.bind(this);\r\n    this.handleGetPersons = this.handleGetPersons.bind(this);\r\n\r\n  }\r\n  handleAlertClick(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      alertClick: !this.state.alertClick\r\n    });\r\n  }\r\n  handleGetPersons(){\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(response => response.json())\r\n      .then(users => \r\n        this.setState({\r\n          users: users\r\n        })\r\n      );\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.handleGetPersons();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"contenedor text-center\">\r\n          {this.state.alertClick && (\r\n            <div\r\n              className=\"alert alert-primary alert-dismissible fade show\"\r\n              role=\"alert\"\r\n            >\r\n              <strong>Manejador de Eventos: </strong> onClick\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n                onClick={this.handleAlertClick}\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n          )}\r\n          {library}\r\n          {getGreeting(user)}\r\n          <img src={logo} className=\"app-logo\" alt=\"logo\" />\r\n          <Reloj />\r\n\r\n          <div className=\"row p-3\">\r\n            {this.state.form ? (\r\n              <div className=\"mt-3 col-12 d-flex justify-content-center\">\r\n                <Form/>\r\n              </div>\r\n            ) : (\r\n              <div className=\"col-12 d-flex justify-content-center flex-wrap\">\r\n                <UserCards users={this.state.users} />\r\n              </div>\r\n            )}\r\n            {!this.state.form && (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-info\"\r\n                onClick={this.handleAlertClick}\r\n              >\r\n                {this.state.alertClick === true ? \"Ocultar\" : \"Click me!\"}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Index from './components/Index'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Index />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}